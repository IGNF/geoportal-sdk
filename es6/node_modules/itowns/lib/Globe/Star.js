'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _create = require('babel-runtime/core-js/object/create');

var _create2 = _interopRequireDefault(_create);

var _three = require('three');

var THREE = _interopRequireWildcard(_three);

var _NodeMesh = require('../Renderer/NodeMesh');

var _NodeMesh2 = _interopRequireDefault(_NodeMesh);

var _StarGeometry = require('../Renderer/ThreeExtended/StarGeometry');

var _StarGeometry2 = _interopRequireDefault(_StarGeometry);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Star = function Star() {
    _NodeMesh2.default.call(this);

    var geom = new _StarGeometry2.default();

    var particles = new THREE.Points(geom, new THREE.PointsMaterial({
        color: 0xAAAACC
    }));
    this.add(particles);
}; /*
    * To change this license header, choose License Headers in Project Properties.
    * To change this template file, choose Tools | Templates
    * and open the template in the editor.
    */

Star.prototype = (0, _create2.default)(_NodeMesh2.default.prototype);

Star.prototype.constructor = Star;

exports.default = Star;