'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _create = require('babel-runtime/core-js/object/create');

var _create2 = _interopRequireDefault(_create);

var _three = require('three');

var THREE = _interopRequireWildcard(_three);

var _ItownsPointMaterial = require('../../../Renderer/ItownsPointMaterial');

var _ItownsPointMaterial2 = _interopRequireDefault(_ItownsPointMaterial);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ItownsPoint = function ItownsPoint(options) {
    THREE.Points.call(this);

    if (options === undefined) {
        throw new Error('options is required');
    }

    this.positions = [];
    this.colors = [];
    this.sizes = [];
    this.geometry = new THREE.BufferGeometry();
    this.material = new _ItownsPointMaterial2.default(options);
};

ItownsPoint.prototype = (0, _create2.default)(THREE.Points.prototype);
ItownsPoint.prototype.constructor = ItownsPoint;

ItownsPoint.prototype.addPoint = function addPoint(v, c, s) {
    if (v instanceof THREE.Vector3) {
        this.positions.push(v.x, v.y, v.z);

        if (c instanceof THREE.Color) {
            this.colors.push(c.r, c.g, c.b);
        }

        this.sizes.push(s);
    }
};

ItownsPoint.prototype.process = function process() {
    this.geometry.addAttribute('position', new THREE.BufferAttribute(new Float32Array(this.positions), 3));
    this.geometry.addAttribute('customColor', new THREE.BufferAttribute(new Float32Array(this.colors), 3));
    this.geometry.addAttribute('size', new THREE.BufferAttribute(new Float32Array(this.sizes), 1));
};

exports.default = ItownsPoint;