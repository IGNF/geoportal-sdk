'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _create = require('babel-runtime/core-js/object/create');

var _create2 = _interopRequireDefault(_create);

var _three = require('three');

var THREE = _interopRequireWildcard(_three);

var _BasicMaterial = require('./BasicMaterial');

var _BasicMaterial2 = _interopRequireDefault(_BasicMaterial);

var _PointVS = "//#version 100\n\nprecision highp float;\nprecision highp int;\n\n#define USE_LOGDEPTHBUF\n#define USE_LOGDEPTHBUF_EXT\n\n#ifdef USE_LOGDEPTHBUF\n\n    #define EPSILON 1e-6\n    #ifdef USE_LOGDEPTHBUF_EXT\n\n        varying float vFragDepth;\n\n    #endif\n\n    uniform float logDepthBufFC;\n\n#endif\n\nconst float SIZE_MULTIPLIER = 300.0;\n\nattribute vec3  position;\nattribute float size;\nattribute vec3  customColor;\n\nuniform float  opacity;\nuniform mat4   projectionMatrix;\nuniform mat4   modelViewMatrix;\nuniform vec2   resolution;\n\nvarying vec4 vColor;\n\nvoid main() {\n\t\tvColor = vec4( customColor, opacity );\n\n\t\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\n\t\tvec4 projectedPoint = projectionMatrix * mvPosition;\n\n                #ifdef USE_LOGDEPTHBUF\n\n                    projectedPoint.z = log2(max( EPSILON, projectedPoint.w + 1.0 )) * logDepthBufFC;\n\n                    #ifdef USE_LOGDEPTHBUF_EXT\n\n                        vFragDepth = 1.0 + gl_Position.w;\n\n                    #else\n\n                        projectedPoint.z = (projectedPoint.z - 1.0) * projectedPoint.w;\n\n                    #endif\n\n                #endif            \n\n\n                float spriteDist;\n\n                if (projectedPoint.w == 0.0) {\n                        spriteDist = 0.00001;\n                } else {\n                        spriteDist = projectedPoint.w;\n                }\n\n                gl_PointSize = (((size * SIZE_MULTIPLIER * (resolution.x/resolution.y)) / spriteDist) * (resolution.x/resolution.y));\n                gl_Position  = projectedPoint;\n}\n";

var _PointVS2 = _interopRequireDefault(_PointVS);

var _PointFS = "//#extension GL_OES_standard_derivatives : enable\n\nprecision highp float;\nprecision highp int;\n\n\n#define USE_LOGDEPTHBUF\n#define USE_LOGDEPTHBUF_EXT\n\n#ifdef USE_LOGDEPTHBUF\n\n    uniform float logDepthBufFC;\n\n    #ifdef USE_LOGDEPTHBUF_EXT\n\n        //#extension GL_EXT_frag_depth : enable\n        varying float vFragDepth;\n\n    #endif\n\n#endif\n\n\nuniform vec3 color;\nuniform sampler2D texture;\nuniform float useTexture;\nuniform float  opacity;\n\nvarying vec4 vColor;\n\nvoid main() {\n\t\t\n        vec4 c = vColor;\n        if( useTexture == 1. ) {\n            c = texture2D( texture, gl_PointCoord );\n            float alpha = step(0.9, c.a);\n            gl_FragColor = c;//vec4(c.rgb * vLighting, c.a);\n            gl_FragColor *= alpha;\n\t}else\n            gl_FragColor = c;\n}";

var _PointFS2 = _interopRequireDefault(_PointFS);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ItownsPointMaterial = function ItownsPointMaterial(options) {
    _BasicMaterial2.default.call(this);

    if (options === undefined) {
        throw new Error('options is required');
    }

    this.vertexShader = _PointVS2.default;
    this.fragmentShader = _PointFS2.default;

    var texture = new THREE.TextureLoader().load(options.texture);

    this.uniforms.time = { value: options.time };
    this.uniforms.useTexture = { value: options.useTexture };
    this.uniforms.texture = { type: 't', value: texture };
    this.uniforms.color = { type: 'v3', value: options.color };
    this.uniforms.opacity = { type: 'f', value: options.opacity };
    this.uniforms.resolution = { value: new THREE.Vector2(window.innerWidth, window.innerHeight) };
    this.transparent = true;
};

ItownsPointMaterial.prototype = (0, _create2.default)(_BasicMaterial2.default.prototype);
ItownsPointMaterial.prototype.constructor = ItownsPointMaterial;

exports.default = ItownsPointMaterial;